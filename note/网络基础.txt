  
  1.计算机网络
	-ISP(internet service provider)	因特尔互联网提供商网络
	-计算设备：主机(hosts)=端系统(end systems) 如：电脑,手机,家用电器设备
	-通信链路：光纤,铜缆...
	-分组交换(交换网络)：转发分组数据包 设备如：路由器,交换机
	
	-internet是为 网络应用 提供通信服务的基础设施：
		-网络应用：web,网络游戏,email
	-internet是为 网络应用提供应用编程接口(api)：
		-支持网络应用连接internet,发送/接受数据
		-提供数据传输服务
		
	-硬件设施+网络协议才能保证应用有序交付
 
  2.网络协议
	-硬件为基础,协议为规则
	-协议三要素：
		-语法syntax：数据的结构与格式
		-语义semantics：即规定对数据的响应
		-时序Timing:时间顺序,速度匹配
	-internet协议标准：
		-RFC  request for comments
		-IETF  互联网工程任务组
	
  3.计算机网络的结构
	-网络边缘 为 主机host 
		-可以运行网络应用程序
		-c/s模型：
			客户与服务器进行交流,客户与客户之间不能直接交流
		-p2p模型(peer-peer):
			无服务器,主机与主机直接通信

	-接入网络,物理介质 为 有线或无线通信链路
		-将网络边缘接入到网络核心去(边缘路由器)
		-家庭/机构接入网络
			-家庭：通过路由器->调制器->电话线或者电缆线->isp
			-机构：以太局域网ethernet-机构路由器->isp
		-移动接入网络
			-无线局域网LANs(wifi)
			-广域无线网WAN(移动互联网)
		-网络带宽bps (网络带宽指:数据传输速率,单位:bps;通信带宽指:信号最高频率与最低频率之差,单位:hz)
			根据接入方式分为：共享/独占
		-接入网络：数字用户线路DSL
			-主线路:主机 -> dsl调制解调器(modem) -> 分离器 -> 多路复用器(dslam) -> isp
			-用电话线连接中心局DSLAM
				-数据通过dsl电话线接入internet
				-电话通过dsl电话线接入电话网
		-接入网络：非对称数字用户线路ADSL
			-上行(上传) 与 下行(下载)速率不同 就为非对称数字
			-将信号调制到不同频带上,通过不同频带载波传输
			-一般下行比上行快,是因为 下行都调到了高hz频带上
		-接入网络：电缆网络
		-主线路:主机 -> 电缆调制解调器(cable modem) -> 分离器 -> 端接系统(cmts) -> isp
			-用的电视电缆线路传输网络
			-通过平分多路复用,数据与电视信号共享线缆利用不同频率传播
			-对应DSLAM的电缆调制解调器(CMTS)
			-使用HFC:混合光纤同轴电缆
			-也是非对称的
			-各家庭共享 家庭->电缆头端 的接入网络
				-即带宽高,但可能比dsl或adsl速率慢
		
	-网络核心 为 相互连接的路由器等
		-关键：路由+转发
		-根据 数据的目的地址 与 路由带的本地转发表 将数据传输到正确的线路上去
		-路由：确定分组从源到目的传输路径(根据路由算法将目的地址转成输出链路)
		-转发：将分组从路由输入端口交换到正确的输出端口

  4.数据交换
	-根据连通性,网络规模建立交换网络
	-交换：
		-动态转接
		-动态分配传输资源
	-数据交换的类型：
		-电路交换：
			-建立连接-->通信-->释放连接
			-特点：独占资源
			-多路复用：
				-共享信道
				-链路/网络资源划分为资源片 -> 分配给各路 -> 每路独占分配达到的资源片进行通信
				-资源片可能idle,不能不同路共享
				-多路复用方法分为：
					-频分多路复用FDM-根据频率,例：电视
					-时分多路复用TDM-根据帧,每帧分为多个时隙
					-波分多路复用WDM-根据光的波长
					-码分多路复用CDM-根据码片序列,例：无线链路
		-报文交换：
		-分组交换：
			-将报文拆分后 + 上头信息 发送->收到后重组 
			-统计多路复用：
				-按需求的多少占用带宽
			-目前最主流的数据交换,更适用与计算机网络的数据交换
			-速度,占用缓存比分组低很多
		
  5.计算机网络体系结构
	-分层网络:
		-实体：表示任何可发送或者接受信息的硬软件进程
		-协议：同层通信的规则
		-服务：下一层相当于上一层的服务,同时上层不用关心下层的内容,只需要调用接口就行
	-OSI参考模型
		-数据封装->添加控制信息:
			-地址信息
			-差错编码检测
			-协议控制
		-物理层：传输比特
		-链路层：
			-加头加尾信息组帧
			-物理寻址,在帧头加物理地址标志数据的接受/发送端
		-网络层:
			-逻辑寻址,如ip地址
			-路由,路由分组转发至最终主机,路径选择
		-传输层：
			-将会话层的报文分段重组
			-sap寻址,如端口号
		-会话层：
			-对话控制的建立维护+同步数据
		-表示层
			-数据的加密/解密,压缩/解压
		-应用层：
			-通过网络接口使用网络服务
	-TCP/IP参考模型	
		-应用层：
			如：http,dns.smtp.
		-运输层：
			如：tcp,udp
		-网际层:
			如：ip
		-网络接口层
			如：网络接口
	-五层参考模型：
		-应用层,传输层,网络层,数据链路层,物理层

 6.网络应用的体系结构
	-socket是操作系统提供给 应用 的网络api
	
  7.网络应用对传输服务的要求+概述
	-要求：数据的丢失/可靠性,时间/延迟,带宽
	-tcp服务：
		-特点：
			-面向连接
			-可靠的传输
			-流量控制
			-拥塞控制
			-不提供延迟保障
			-不提供带宽保障
	-udp服务：
		-特点：
			-无连接
			-不可靠数据传输
			-不提供一些服务
	-web服务：
		-对象寻址URL：协议://主机名:端口号/文件地址
		-无状态：服务器不维护请求消息
		-路线:s80端口等待->c发送请求tcp->s收到请求tcp->c与s交换http消息->关闭tcp连接
  
  8.http连接：
	-早期http1.0:非持久性连接
	-现在http1.1:持久性连接
	-消息格式:
		-head：
			request line,head line
		-body
	-telnet http请求软件
	
  9.Cookie技术
	-概念：存储在用户本地终端上的数据
	-目的：辨别用户身份,进行session
	-cookie组件：
		-http响应请求消息的cookie头部行
		-保存在客户端主机上的cookie文件,由浏览器管理
		-web服务器后台数据库
	-用于：身份认证等..
 
  10.web缓存技术/代理服务器
	-在不访问服务器的前提下满足客户端http请求
	-特点：性能优化,减少流量,cdn网络..
	-过程：
		-用户先给缓存服务器发送请求
		-如果有就返回响应,没有就想原始服务器发送请求
	-条件性get：
		-请求消息有声明持有版本的日期 if-modified-since<date>
		-没有改动返回304 not modified,不包含对象

  11.DNS服务器-域名
	-作用：域名与ip之间的映射
	-可以做负载均衡
	-223.5.5.5 阿里域名服务器
	-dns资源记录分为：
		-type=A		key:主机域名	val:IP地址
		-type=Ns	key:域			val:该域的权威域名解析服务器的主机域名
		-type=CNAME	key:别名		val:真实域名
		-type=MX	key:邮箱		val:邮箱服务器地址
	-dns协议：查询query+回复reply
		-其消息格式是相同的
		-消息头：
			-identification		16位查询编号
			-flags				标价
			...
	-注册域名：
		1.域名管理机构-注册域名
		2.向域名管理机构提供来自权威域名解析服务器的名字和ip地址
		3.域名管理插入两条记录：NS+A
		4.域名解析插入：A+MX
		
  12.Socket编程
	-应用接口api
		-libPacp/winPacp linux/windows抓包库
	-当应用程序创建socket时,操作系统会分配一个数据接口存储socket相关信息
	-sockaddr_in
		struct sockaddr_in{
			u_char 	sin_len;		地址长度
			u_char 	sin_family;		地址簇(eg:tcp/ip使用的AF_INET)
			u_short sin_port;		端口号
			struct in_addr sin_addr;		IP地址
			char 	sin_zero[8];			置零
		}
	-winsock(windows的套接字)函数 - C
		-WSAStartup函数			创建winsock
			参数:使用winsock的版本,wsadata指针
		-WSACleanup函数			关闭winsock
		-Socket(protofamily,type,proto)		创建套接字,返回sd
			-protofamily协议簇	eg:PF_INET tcp/ip
			-type协议簇类型		
				-sock_stream	tcp传输层
				-sock_dgram		udp传输层
				-sock_raw		ip/icmp/igmp网络层(需要root权限)
			-proto协议号		默认0
		-Closesocket(sd)						关闭套接字
			-如多个进程共享一个套接字,会将套接字引用数减1,至到0成算关闭成功
		-int bind(sd,sockaddr_in,地址长度)		绑定ip地址
			地址通配符inaddr_any 意味着任意地址
		-int listen(sd,queuesize请求队列大小)	启动socket监听
		-connect(sd,地址,地址长度)				socket连接指定地址
		-accept(sd,caddr,caddrlen)				取客户请求,返回newsock
		-send,sendto						    发送数据
		-recv,recvform							接受数据
		-setsockopt								设置sd选项参数
		-getsockopt								获取sd选项参数
	-tcp将字节转换成网络字节-然后进行传输

  13.传输层
  	-基本理论与基本机制
  		-多路复用/分用
  		-可靠数据传输机制
  		-流量控制机制
  		-拥塞控制机制
  	-internet传输层协议
  		-udp	无连接传输服务
  		-tcp	面向连接的传输服务
  		-tcp拥塞控制机制
  	-网络层VS传输层
  		-网络层：提供主机之间的逻辑通信
  		-传输层：提供应用进程之间的逻辑通信机制
  			-位于网络层之上
  			-依赖网络层
  			-对网络层服务进行增强

  	-多路复用/分用 - 传输层
  		-复用：socket接受数据,为每块数据上头信息,生成segment,交给网络层
  			-多进程的信息 -> 1个网络层传输
  		-分用：根据头信息将收到的segment交给不同进程
  			-1个网络层来的消息 -> 分给多个进程
  		-无连接的多路分用(udp)
  			-头信息确定了目的ip+端口号
  			-当主机收到udp段后,检查目的端口号,将udp导向绑定该端口号的socket
  			-不会管源ip+端口是多少

  		-面向连接的分用(tcp)
  			-4元组标识：
  				-源ip,源端口,目的ip,目的端口
  			-服务可同时支持多tcp-socket
  				-每个socket用自己的4元祖标识
  			-1个客户机进程 对应 1个服务器进程(或者该进程的1个线程)
  	-udp --user datagram protocol
  		-基于Internet ip协议 增加了：
  			-复用/分用
  			-简单的错误校验 防止链路网络层传输出错
  		-best errort服务,udp可能会
  			-丢失
  			-非按序到达
  		-无连接
  			-发送方与接收方不需要握手
  			-每个udp段处理独立于其他段
  		-udp为什么存在？
  			-1.不需要建立连接 -- 意味着延迟减少
  			-2.实现简单,无需维护连接的状态
  			-3.头部开销少
  			-4.没有拥塞控制,应用可以更好的控制发送时间与发送速率
  		-使用场景：
  			-流媒体应用
  				-容忍数据丢失
  				-速率敏感
  			-dns,snmp
  		-如何在udp上实现可靠的数据传输
  			-在应用层增加可靠性机制
  			-应用特定的错误恢复机制

  	14.可靠数据传输的原理
  		-rdt 可靠数据传输协议
  		-rdt_send() -> udt_send() <-> unreliable channel <-> rdt_rcv() -> deliver_data()
  			上层协议调用一次即可  下层协议会反复调用 直到可靠交付
  		-FSM利用状态机刻画传输协议

  		-rdt1.0
  			-发送方：因下方channel可靠就直接发送rdt_send
  			-接收方：因channel可靠直接接收等待调用

  		-rdt2.0 现在可能发生 -- 位错误
  			-接收方:效验和检测位错误
  			-同时有ack机制,告知发送方已正确接收
  			-发送方收到nak就重传分组
  			-重传机制的rdt为： ARQ(automatic repeat request)协议
  			-停-等协议
  				 fsm会处于：发送方wait for call from above <-> wait for ack or nak
  						    接收方wait for call from below

  		-rdt2.1
  			-基于2.0 如果ack或者nak出现错误,出现死锁
  				-解决方法：如果ack和nak出现错误-重传数据,但不能简单重传(出现两个相同的数据)
  			-产生重复分组：
  				-解决方法：为消息加上序列号,丢弃重复分组

  		-rdt2.2
  			-问题：有两个确认消息ack+nak
  				-解决方法：只要ack+序列号,发送方收到重复ack就重发

  		-rdt3.0 现在可能出现channel错误,也可能丢失分组
  			-方法：发送方等待合理时间
  				-如果没有收到ack重传
  				-如果ack延迟了 ,重复分组 ->已被序列号解决
  				-使用定时器
  		-目前实现：能正确工作,但是性能很差
  		-在rdt3.0的基础上采用流水线机制,提供资源利用率
  			-同时发送多个分组
  		-滑动窗口协议
  			-窗口：
  				-允许使用的序列号范围
  				-窗口尺寸为N,最多有N个等待确认的消息
  			-滑动：
  				随着协议的运行,窗口在序列号空间内向前滑动
  			-协议有：GBN,SR:
  				-GBN
  					-ack(n) 确认到序列号n的分组均被正确接收
  					-设置有timer timeout(n):重传序列号大于等于n,还没收到的ack所有分组
  					-接收机制：
  					-发送拥有最高序列号的被正确接收的ack
  					-乱序到达的分组直接丢弃,然后重新确认最大序列号分组
  				-SR
  					-比GBN多了接受方的窗口
  					-将接收到的标记
  					-等于发送/接受双窗口,但相互并不知道位置
  					-缺陷：
  						-当窗口尺寸较大,但是序列号少时,出现接收方接受成功,发送方没收到确认消息,重发序列号正好而又错误的数据
  						-解决方法：
  							发送方窗口+接收方窗口 <= 序列号数

  14.tcp协议
    -特点:
        点对点:一个接收 一个发送
		流水线机制：介于gbn,sr之间的机制
		可靠m,按序
		全双工full-duplex:同一链接可以传输双向数据流
	-tcp段结构
	    source port,dest port,sequence name,ack name...
	-序列号和ack
	    序列号是segment第一个字节的编号
	    序列号累计确认
        乱序到达的segment无处理
    -tcp实现的可靠数据
        -概述
            -流水线机制
            -累计确认
            -单一重传定时器
            -出发重传事件：超时，收到重复ack
        -合理设置定时器时间
            关键参数：RTT(round-trip time 往返时延)
            采样多个SampleRTT，求平均值,作为估计值EstimatedRTT
            devRTT = SampleRTT与EstimatedRTT的差值绝对值
            最终：TimeoutInterval = EstimatedRTT + 4devRTT
        -tcp中如果发生超时,会使超时间隔加长
        -通过重复ack检测分组丢失
            -sender收到receiver的3个相同ack就假定数据丢失，重发
            -快速重传,在定时器超时前发送
    -tcp流量控制
        -概念：为防止传输给receiver数据太快,以至于数据处理不过来
        -速度匹配机制
        -机制：
            rcvWindows里的spare room（buffer可用空间）
            接受方告诉发送方
            发送方限制自己发送数据
    -tcp连接管理
        -建立连接前：初始化一些tcp变量 3次handShark
            -当第二次握手时,客户端会开辟预工作空间
                -掌握这种方法,可进行攻击
        -关闭连接：客户端主动发送关闭请求
    -拥塞控制原理
        -概念：解决数据太多，网络无法处理的问题
        -表现：分数丢失,分组延迟过大
        -控制方法：
            -端到端(tcp使用)
                网络层不需要显示的提供支持
                端系统通过观察delay和loss网络行为判断是否拥塞
            -网络辅助
                路由器向发送方显式的反馈网络拥塞信息
                简单的拥塞指示,根据指示控制发送速率
                -ABR available bit rate
                    -弹性服务
                    -根据可用带 宽,调整传输速率
                    -发送拥塞-最低的保障速率
                -RM cells  resource management
                    -发送方发送
                    -交换机设置RM cell位
                        -NI rate不增长
                        -CI 拥塞指示
                    -由接收方返回给发送方
        -tcp拥塞控制机制：
            -限制发送速率
                rate = congWin/RTT
                congWin 动态调整改变发送速率,反映感知的网络拥塞
            -当timeout 或 3个重复ack 发送方降低速率
            -AIMD 慢增长-遇问题减半
                原理：谨慎探测可用带宽,逐渐增加发送速率,当发送loss速率减半
                additive increase multiplicative decrease
            -SS 慢启动
                原理：连接开始时数额小，指数性增长
            -Threshold 变量
                -当CongWing是Loss前1/2时,指数性增长切换为线性增长？
            -Loss事件处理：
                -非严重处理：遇到3个重复ack congWin 减半 调整为线性增长
                -严重处理：timeout事件 congWin设为1 调整为指数增长

  15.网络层服务
    -主机对主机的传输
    -核心功能：
        -转发：
            将分组从路由器的输入端口转移到合适的输出端口
            实现：路由器使用转发表,根据地址查询转发到的输出链路
        -路由：
            确定分组从源安东目的经过的路径
    -连接建立
        -数据分组传输之前两端主机需要首先建立虚拟/逻辑连接
        -网络层连接：两个主机之间的路径上的路由器都要保存连接的信息
    -无连接服务：
        -不事先为系统分组传输确定传输路径的服务：无连接服务
        -每个分组独立确定传输路径
        -不同分数传输路径可能不同
        -代表：数据报网络
    -数据报网络：
        -类似udp,无连接
        -目的地址：每个分组都保存有目的地址
        -路由选择：每个分组随机选择路由
        -无法保障顺序到达
        -端到端的差错处理由主机负责
        -端到端的流量控制由主机负责
    -连接服务：
        -建立连接：实现为系统分组的传输确定从原到目的经过的路径
        -通过该路径传输分组
        -代表：虚电路网络
    -虚电路网络
        -类型tcp,必须建立连接
        -目的地址：在建立连接时需要用到目的地址,然后输出数据只需要存虚电路号
        -路由选择：连接建立成功,所有分组用同一路由,一旦路由出问题就会崩溃
        -顺序到达
        -端到端的差错处理由通信子网负责
        -端到端的流量控制由通信子网负责
    -ip数据报
        -IP协议是不可靠的无连接数据报传输
        -字段及其功能：
            版本号：    4位  表示ip协议版本
            头长度：    4位  报头的长度
            服务类型：  8位   规定数据报处理方式
                优先权
                短延迟
                高吞吐
                高可靠
                保留位
            总长度：   16位  整个数据报的长度
            生存时间   8位   设定数据报在网络中传输的最长时间(实际设定的是数据报经过的最大路由数)
            上层协议   8位   ip协议可以将数据送到指定的上层协议
                -ICMP 1 网际控制报文协议
                -IGMP 2 网际组管理协议
                -GPP  3 网关-网关协议
                -ST   5 流
                -TCP  6 传输控制协议
                -EGP  8 外部网关协议
                -IGP  9 内部网关协议
                -NVP  11 网络声音协议
                -UDP  12 用户数据报协议
            校验和：   16位  用于校验协议头数据的正确与完整性
            源地址：   32位  发送方ip地址
            目地址：   32位  接收方ip地址
        数据报分片和重组
            最大传输单元:不同路由之间的链路与介质物理性能不一定相同，需要设定最大传达单元MTU
			分片：将一个数据报分成多个数据报- 每个数据报头信息相同,数据被分开,同时保存分片的片号
			    标识，标志，偏移量
			重组：根据收到的分片数据报进行整合成真实的数据报
    -ip编址：
        -IP地址使用32位二进制表示
	    前16位表示网络号 后16位表示主机号
	    ABC三类ip地址
	    A:0.0.0.0 - 127.255.255.255
	    B:128.0.0.0 - 191.255.255.255
	    C:192.0.0.0 - 223.255.255.255   X.X.X.0 网络地址 X.X.X.255 广播地址
	-子网划分和子网掩码
	    在原网络划分下再进行网络划分：netID + subID + hostID
	    -子网掩码
	        -根据点分十进制形式划分：netID+subID 默认为1 hostID为0  所以如C类网络 为255.255.255.0
	        -路由器根据子网地址与子网掩码来确定Ip分组转发到那个子网
        -私网地址
            -作为局域网之中使用
	        -A: 10.0.0.1 - 10.255.255.255
	        -B：172.16.0.1 - 172.31.255.255
	        -C：192.168.0.1 - 192.168.255.255
    -CIDR与路由聚合
        -作用：  消除传统A,B,C地址划分
                 融合子网地址与子网掩码,方便子网划分
                 提升ipv4地址分配
        -格式：a.b.c.d/x   其中x为前缀长度

  16.DHCP协议
    -动态主机配置协议dynamic host configuration protocol
    -从服务器获取动态的ip地址

  17.NAT
    -网络地址转换
    -将私有网络的数据通过转换发送出去
    -该网络内所有ip地址相同,不同主机端口不同
    -NAT转换表：WAN端地址 LAN端地址
    -限制:一般只支持6w个并行端口连接
          因为用了端口号,跨层用了传输层的功能
          NAT应该被ipv6取代
	-NAT穿透问题：
	    -因为nat的原因,外部无法直接连接内部网络
	    -解决方法：
	        1.静态配置nat转换表,将特定端口请求转发给服务器 - 过于固定
	        2.利用upnp互联网网关设备协议自动配置,类似于1 - 相较于他会自动增删端口映射
	        3.中继: 设定一个 中继的服务器 让NAT内客户与中继连接 外部客户通过中继服务器转发内部客户 桥接作用

  18.ICMP协议
    -互联网控制报文协议
    -差错报文
        目的不可达
        源抑制
        超时/超期
        参数问题
        重定向
    -网络探洵
        回声请求与应答报文
        时间戳请求与应答报文

  19.IPV6
    -目的：解决ipv4地址空间不足,改进首部格式,快速处理/转发数据报,支持QOS
    -格式：40字节基本首部,不允许分片
    -改变：减少'校验和,首部选项,ICMPv6附加报文类型,多播组管理
           使用16进制7个冒号分割8组 F15:F45:515:54:51:551:5:FFF
           使用压缩形式 FF01:0:0:0:0:0:0:43 -> FF01::43
           ipv4嵌入式   ::FFF:13.1.83.3
           无子网掩码,使用CIDR
           URL 中将地址用[]分割 http://[X:X::X]:8888
    -单播与多播
    -IPV4向IPV6的过渡：
        使用 隧道共存tunneling ipv6作为ipv4的载荷进行封装,穿越ipv4网络

 20.路由算法与协议
    -抽象：图的抽象
        -费用costs
            代表：链路的费用, 也可以表示为带宽的倒数,拥塞的程度等
        -将路由抽象为图后:
            算法：只需要计算从源到目的的最小费用
	-路由算法分为静态路由与动态路由
	    -静态：-
	        人工/手工配置
	        路由更新慢
	        优先级高
        -动态
            路由更新快
            定期更新/及时响应链路费用变化
    -全局信息与分散信息 算法
        -全局：
            所有路由器掌握完整的网络费用信息
            链路状态路由算法
        -分散：
            只掌握与其相邻的链路费用信息
            邻居间信息交换
            距离向量路由算法
    -链路状态路由算法
        -又名dijkstra算法
        -所有结点掌握所又网络的费用
        -通过链路广播出去(即相邻扩散传播)
        -所有节点有相同信息
        -计算从源到目的的最短路径,k次迭代到达目的最短路径
    -距离向量路由算法
        -又名bellman-ford算法
        -邻居告知结点最小的链路费用
        -只需要维护其所有邻居的距离向量
        -核心：将自己结点dv估计发送给邻居,当X接收到dv估计时,依据Bf更新自身距离向量估计
	    -异步迭代,分布式
    -层次化路由
        -作为互联网,整个使用之前的算法都没用
        -原因：存储太大,信息交换量太大
        -聚合一个范围的区域路由看成一个路由(网关)：单区域自治系统AS(autonomous systems)
	    -不同自治系统自己设定自己的路由算法,然后设定网关路由器gateway router
        -网关路由器：
            位于AS边缘
            通过链路连接其他AS网关路由器
    -IGP AS内部网关协议
        -RIP协议 路由信息协议
            -距离度量路由算法 hops跳步数 最大15hops - 因此不适用与大型网络
            -每个30s邻居交换 一次dv 通告advertisement 最大25个目的子网/每次通告
            -判断链路失效/恢复：如果180s没收到通告即为失效
                          经过改路由的链路不可用
                          向邻居发送新的通告 - 转而依次向外发送通告
                          链路失效快速传播 - 可能出现无穷计数 - 当出现无穷计数将其设定为16hops
            -RIP的路由表利用route-d应用层协议管理 通告用udp
        -OSPF协议 开放最短路径优先
	        -链路状态路由算法
	        -LS分组通告,每个路由构造完整的AS拓扑图
            -报文封装在ip数据报中
		    -相似协议is-is
		    -优点：相比于RIP
		        -安全 所有报文需要被认证
		        -运行使用多条相同费用到达路径
		        -对于多条链路,可以针对不同tos设置不同费用度量
		        -集成多播路由与单播路由 MOSPF与OSPF利用相同拓扑数据
		        -支持大规模AS分层:区边界路由器（作为某区域的向外的路由）
		                         主干路由器（连接主干与区边界）
                                 AS边界路由器（汇总主干,连接其他AS）
    -BGP AS间路由协议
        -边界网关协议border gateway protocol
        -提供的功能：
            eBGP 从邻居AS获取子网可达性信息
            iBGP 向所有AS内部路由器传播子网可达性信息
            基于可达性信息,确定到达其他网络的好路径
        -BGP会话：两个BGP路由建立半永久tcp连接,通告去往不同目的prefix的路径
        -BGP报文：
            OPEN  与peer建立tcp连接,认真发送发
            UPDATE 通告新路径
            KEEPALIVE 在无update时保持连接,也用于open请求的确认
            NOTIFICATION 差错报告,也用于关闭连接
        -只为自己的客户，提供网络，两端相连，需要走提供商的网关

  21.数据链路层
    -概述:  主机和路由器:Nodes
           连接相邻节点的通信信道:links
                wired links 有线链路
                wireless links 无限链路
                LAN 局域网
		   链路层数据分组:frame
	-提供给上层的服务:
	    组帧：将数据报构成数据帧,加首尾,帧同步
	    链路接入：如果是共享介质,解决信道接入channel access
	             帧首 中MAC地址,用于表示帧的的源和目的
        相邻结点间可靠交付
        流量控制：协调相邻发送结点和接收
        差错检测
		差错纠正
		控制通信方式：全双工 链路两端结点同时双向传输
		            半双工 链路两端结点交替双向传输
    -差错编码：
        基本原理：在源数据里面加入冗余数据用于检测数据传输后时候丢失
        -一般为线性关系 R=f(d)
        -检错码
            -如果编码集ds=r+1 可以检测r位的差错
        -纠错码
            -如果编码集ds=2r+1 可以检测r位的差错
            -将数据根据编码集最近的进行纠正
        -奇偶校验码
            -1比特校验位 0101010111 + 0
                只有1个比特的校验位
                数据+校验位 奇校验1的个数-满足奇数个
                         偶校验1的个数-满足偶数个
                因此 只能检测奇数位,检测率50% 效率高
            -二维奇偶校验位
                每行每列都使用奇偶校验
                检测能力：所有奇数位差错,能检测出偶数位差错
                纠正能力：所有row/column奇数位错
        -internet校验和checksum
            -将数据划分为16位二进制整数,将补码求和,然后求反码
        -CRC 循环冗余校验码
            -检错能力强大的差错编码
            -检测：
                将数据比特D视为一个二进制数
                选择r+1位比特模式G
                选择r位的CRC比特,R,满足<D,R>刚好被G整除（模2）
                余为0就无错误,否则就有错误
                可以检测r+1为差错,当G选择好时,检测能力99%
    -MAC协议
        -多路访问协议
        -在广播链路中如果两个或以上结点同时传输 会出现干扰与冲突使接受失败
        -多路访问控制协议multiple access control protocol
            -采用公布式算法决定节点如何共享信道,即决策节点何时可以传输数据
            -通信信道共享协调信息
        -协议分类：
            -信道划分MAC协议
                -多路复用
                -TDMA,FDMA,CDMA与之前多路复用相似
                -将信道划分开来
                -优缺点：多个信道共用是利用率高，越少利用率越低
            -随机访问MAC协议
                -信道不划分,运行冲突
                -冲突恢复机制
                -当结点要发送分组时：
                    利用信道全部数据速率R发送分组
                    没有事先系结点间协调,两个节点会发生冲突
                    冲突检测机制：确认机制
                    冲突回复机制：重发
                -典型的随机访问MAC协议
                    时隙ALOHA协议
                        -所有帧大小相同
                        -时间被划分为等长的时隙
                        -结点只能在时隙开始时刻发送帧
                        -结点间时钟同步
                        -如果两个以上同一时隙发送,即冲突
                        -有冲突：在下个时隙一定概率重传,直到成功
                    CSMA,CSMA/CD,CSMA/CAz
                -优缺点：单个利用率高，多个共用浪费很多资源
            -轮转MAC协议
                -基于上面两个优点
                -节点轮流使用信道
                -轮询polling
                    -主节点轮流邀请从节点发送数据
                    -缺点：轮询开销,等待延迟,单点故障(主节点)
                -令牌传递token passing；
                    -各个结点依次传递令牌，有令牌的就能发送数据
                    -缺点：令牌开销,等待延迟,单点故障
    -MAC地址协议
        -又名：LAN地址,物理地址,以太网地址
        -作用：
            用于局域网内标识一个帧从哪发出,哪里接受
        -48位MAC地址,固定在网卡的rom中,也可以软件设置
        -MAC地址有IEEE管理与分配
        -ARP协议 地址解析协议:
            -ARP表：每个iP结点维护一个表
                -存储的LAN结点的ip/mac地址映射关系<ip;mac;ttl>
            -当A给自己局域网B发送数据报,但Bmac地址不在A的ARP表中
                -A在LAN广播ARP查询分组,其中包含B的ip地址
            -A在ARP缓存B的ip-mac地址,直到超时,超时后刷新

  22.以太网
    -最常用的局域网
    -优点：价格便宜,应用广泛,网络速率符合需求
    -物理拓扑：
        -总线bus：
            所有结点在同一冲突域（可能彼此冲突）
        -星型star：
            目前主流网络拓扑，中心交换机
            每个结点一个单独冲突域（结点彼此不冲突）
    -以太网在链路层是无连接服务,不可靠(无ack)
    -以太网mac协议：采用二进制指数退避算法CSMA/CD
        -二进制指数退避算法；
            当数据发送出现m次冲突：
            取n=min{m,10} m++
            NIC n的多少次方随机选择K
            NIC 等待K512比特延迟时间,再发送帧
            意味着冲突越多,等待越长
    -交换机switch
        -链路层设备
            -存储转发以太网帧
            -检验到达帧的目的mac地址,选择性向一个或者多个输出链路转发帧
            -利用csma/cd访问链路
        -特性：透明
            -主机感知不到交换机的存在
        -即插即用
        -自学习
            -无需配置
        -交换；
            各主机数据传输不产生冲突
        -拥有交换表
    -虚拟局域网VLAN
        -概念：不需要仅靠路由器来区分局域网的范围,靠软件设定局域网的大小及其范围
        -可以在物理LAN架构上配置和定义多个VLAN局域网
        -VLAN与VLAN通信,通过路由器本身转发
    -目前路由器和交换机合并使用-称为第三层设备
    -PPP协议 point-to-point protocol点对点链路控制协议
        -一个发送端,一个接受端,一条链路
        -无需MAC介质访问控制
        -无需MAC寻址
        -例：拨号链路,ISDN链路
        -功能：
            -组帧：可以任何网络层协议分组,可以向上层实现分用
            -比特透明传输：数据域可以支持任何比特模式
            -差错检测
            -连接活性检测
            -网络层地址协商：端节点可以学习

  23.无线局域网 AP Access Point
    -802.11b
        -物理层带宽：2.4-2.485ghz频段
        -最高速率11mbps
        -物理层：直接序列扩频技术DSSS
    -802.11a
        -物理层带宽：5-6ghz频段
        -最高速率54mbps
    -802.11g
         -物理层带宽：2.4-2.5ghz频段
         -最高速率54mbps
    -802.11n
         -物理层带宽：2.4-5ghz频段
         -最高速率600mbps
    -802都使用CSMA/CA多路访问控制协议
    -都有基础设施（基站）网络模式和特定网（自组网）网络模式
    -基站的服务范围：基本服务集BSS  basic service set
    -802.11b：
        -每个AP选择一个频率
        -相邻的AP选择相同的信道,存在干扰(mac控制协议)
        -主机必须与AP关联才能使用它 - wifi账号密码连接
            -步骤:扫描信道,选择AP进行关联,身份认证
        -AP关联方式
            -被动扫描
                -AP主动发送信号帧，主机接收到发送请求帧，AP发送关联响应帧
            -主动扫描
                -主机发送探测请求帧,AP发送响应帧,主机接收到发送请求帧，AP发送关联响应帧
    -多路访问控制：
        -机制：
            发送方监听到信道空闲一定时间后,发送整个帧
            如果监听到信道忙,继续等待,当信道空闲才发送，发送后没收到ACK就重复
        -mac协议
            -思想:允许发送端预约信道,避免长数据帧冲突
            -先发送预约帧,预约成功即发送真实数据帧

  24.网络安全
    -网络安全基本属性：
        机密性，发送方加密报文，接受方解密报文
        身份认证
        信息完整性
        可访问下与可用性
    -internet安全威胁
        -映射mapping
            发送攻击前：探路,找到网络上运行什么服务
            利用ping命令确认网络上主机的地址
            端口扫描,扫描该主机可以进行攻击的端口 nmap端口扫描工具
            -对策：
                记录到达的网络流量
                分析、识别可疑的活动(如ip地址和端口被依次扫描...)
        -嗅探：
            -混杂模式网络接口接受/记录所有经过的分组/帧
            -抓包 wireshark抓包工具
            -对策：
                -接入主机运行软件,周期性检测网络是否在混杂模式
                -每段广播介质只连接一台主机-就没有第三方
        -ip欺骗
            -直接由应用生成原始ip分组,让其地址与某个其他正常主机ip相同
            -对策：
                -入口过滤,路由器不转发源ip地址无效的ip分组
                    (意思ip地址不属于所连接网络)
        -拒绝服务DOS、
            -泛洪分组
            -消耗服务器带宽
            -资源消耗cpu,内存
            -ddos攻击：选择目标,入侵主机,一起向目标发送攻击
            -反射ddos攻击：选择目标,入侵主机,选择反射服务器,用反射服务器攻击目标
                -选择的反射服务器没法应对攻击,僵尸主机还会Ip欺骗,让发射服务器以为是目标服务器发送的数据进行返回
            -对策：
                -过滤泛洪分组 - 会影响正常用户发送
                -追溯攻击源 - 相对较难实现
                -syn cookie：根据tcp特性,前两次握手 并不为其开启资源,而是第三次握手后才开启资源
                             如何判断是否是3次握手:返回序列号为 hash(源ip,目的ip,源端口,目的端口,自我设定的数据值)
                                                 确认序列号= hash+1

  25.密码学
    -对称密钥加密：
        -加密解密用的相同密钥
    -公开密钥加密：
        -每个人有公开和私有密钥
        -向一个人发送密钥时,用对方公开的密钥加密,然后接收方用自己私有的密钥解密
    -破解加密方法：
        -唯密文攻击：
            -截取密文,基于对密文的分析进行破解
            -暴力破解：尝试所有可能的密钥
            -统计分析：根据密钥的规律进行破解
        -已知明文破解：
            -入侵者已知一部分明文与之匹配的密文进行解密
        -选择明文破解：
            -入侵者可以获取针对选择的明文的密文
    -加密方法：
        -传统加密：
            -替代密码：
                -用一个东西替代另外一个东西
                -例：凯撒密码
                -分为单码替代，多码替代
            -换位密码：
                -重新排序明文密码
                -例：置换法：将明文划分为固定长度的组,每个组字母按置换规则交换位置
        -现代加密：
            -对称密钥加密
                -流密码：
                    -加密过程：明文->密钥流（根据密钥产生）->密文
                -分组密码：
                    -将明文序列划分成长为m的明文组
                    -将各明文组在长度为i的密钥组控制下变化成长度为n的密文组
                    -例；feistel分组密码结构
                -数据加密标准DES
                    -DES是16轮的feistel结构密码
                    -DES分组长度64位
                    -DES使用56位密钥
                    -DES每轮使用48位子密钥
                    -初始置换ip
                        -根据ip置换表将64位数据进行排列顺序打乱
                    -DES安全性：差
                    -之后将DES进行了改进,各方面都加强了
                -高级加密标准AES
                    -rijndael算法
                        -加解密相似但不安全对称
                        -支持128/192/256数据块大小
                        -支持128/192/256密钥长度
                        -结构简单,速度快
                        -特点：
                            分组长度和密钥长度可变
                            循环次数允许在一定范围内根据安全要求修正
                            汇聚了安全、效率、易用、灵活等优点
                -加解密速度较快
            -非对称密钥加密 公开密钥加密
                -RSA算法
                    -算法的前提：模运算
                        -(a+b)/n = (a/n+b/n)/n
                        -(a-b)/n = (a/n-b/n)/n
                        -(a*b)/n = (a/n*b/n)/n
                        -a/n d次方/n = a的d次方/n
                    -报文/信息
                    -具体看P107
                -效率低
    -身份认证authentication：
        -进化演变：
            -协议ap1.0  发送放简单的声明自己的身份
            -协议ap2.0  需要在Ip分组声明自己身份,同时包括自己源ip
            -协议ap3.0  发送自己的秘密口令 - 会被sniffing获取到口令
            -协议ap3.1  密码口令加密 - 会被回放攻击
                -避免回放攻击：使用一次性随机数
            -协议ap4.0  验证人发送随机数R给被验证人,被验证人用共享密钥加密随机数再发送,验证人才确认发送方是本人
            -协议ap5.0  利用公钥,被验证方将私钥加密的随机数给验证方,再将公钥给验证方 -会被中间人攻击
    -消息完整性
        -目的：保证报文没有被篡改，报文确实来自声称的发送方
        -密码散列函数：
            -特点：
                散列算法公开
                计算快速
                无法被预知
                不同报文不能产生相同的散列值
                单向性，不能逆推
            -MD5算法 - 被广泛使用
                -安全性较差
            -SHA-1算法
                -安全性较高
                -散列值160位
                -速度较慢
        -在散列函数前加入报文认证密钥mac
        -会被否认,伪造，冒充，篡改
    -数字签名：
        -目的：解决消息完整性的缺陷
        -简单的签名：
            -生成报文与其用私钥加密的报文一起发送给接收方
            -用k+解密k- 与报文进行对比
        -报文摘要签名：
            -报文->散列->散列后报文->签名->摘要
    -密钥分送中心KDC
        -目的：共享可信赖的秘密密钥
        -用一个专门的密钥分送服务器,将密钥分送给用户
        -针对对称密钥
    -公钥认证中心CA
        -从CA获取认证的公钥
        -可信赖的公钥分发中心,确认公钥的持有方真实信息正确
    -Web应用安全：
        -安全威胁：
            web服务器越强大,安全漏洞概率越高
            HTTp服务可在不同权限下运行
            web活动页隐藏恶意程序
            监听通信信道所传输的信息机密性
            伪造,篡改所传输信息的完整性
            缺乏身份认证的,中间人攻击
            拒绝服务攻击使得通信信道不能保证可用性
        -SSL
            -SSL安全套接字 TLS传输层安全 IPSec端到端的安全机制
            -https 协议
            -几乎所有浏览器都支持
            -过程：握手 -> 密钥派生 -> 数据传输 -> 连接关闭
            -4中密钥：
                kc = 加密客户端->服务器的密钥
                mc = 客户端 -> 服务器的mac密钥
                ks = 加密服务器 -> 客户端的密钥
                ms = 服务器 -> 客户端的mac密钥
            -kdf实现密钥派生函数
            -ssl是两层协议


  26.VPN技术 virtual private network
    -虚拟专用网
    -利用 中间服务器  来对外访问












		
		
		
		
		
		
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	