 
  1.使用
	-git clone ....		克隆/下载仓库代码到本地
		//git clone git@gitee.com:im/im.git
		-gitee gitlab git ...的文件都可以下载
	
  2.配置文件信息
	-克隆没有加密的仓库,可以不需要任何配置就可以下载
	-但是有加密的仓库,就需要配置公钥和账号
	-1):
		-git config user.name "名字"              设置名字
		-git config user.email "邮箱"             设置邮箱
		-git config --global user.name "名字"     修改名字
		-git config --global user.email "邮箱"    修改邮箱
	-2):
		-git config --list	查看配置信息
	-3):
		-ssh-keygen -t rsa -C "邮箱"	生成shh秘钥
		*注意：
			遇到：ssh-keygen command not found
			-cd ~/.ssh	
			-mkdir key_backup	
			-cp id_rsa* key_backup	//报错不用管
			-rm id_rsa*				//报错不用管
			-再次执行生成shh秘钥
	-4):
		-windows系统：在C:\Users\XX\.ssh	找到id_rsa.pub
		-linux系统：在~/.ssh				找到id_rsa.pub
		-复制内容
	-5):
		-git或者gitee或者gitlab...官网 个人设置->安全设置->ssh公钥->添加公钥->粘贴到 公钥 处->确定
	-6)：
		-git clone 你的仓库吧！
    -配置文件地址:
        -用户全局:
            windows: C:\Users\Administrator\.gitconfig
            Linux: ~/.gitconfig
        -当前项目:
            项目：项目文件夹/.git/config

  3.接收
	git pull		从远程获取最新的版本到本地，并自动merge
	git fetch		从远程获取最新版本到本地，不会自动merge
	
  4.提交
	git push		将本地项目提交到远程仓库GitHub。
	git commit		将本地修改过的文件提交到本地库
	
  5.追踪
	git add			命令对当前目录下的文件添加跟踪

  6.错误情况
	warning: LF will be replaced by CRLF in xxx.
	-输入：git config core.autocrlf false
	
  7.数据冲突：
	git stash	备份当前的工作区的内容，从最近的一次提交中读取相关内容，让工作区保证和上次提交的内容一致
	git pull	拉取服务器上的代码；
	git stash pop 	从Git栈中读取最近一次保存的内容，恢复工作区的相关内容
	git stash list  显示Git栈内的所有备份
	git stash clear 清空Git栈
	
  8.忽略提交
	.gitignore	创建该文件 配置忽略提交的文件
	
  9.分支:
    git branch -a                        查看所有分支
    git branch                           查看当前使用分支
	git checkout 分支名                   切换分支
	git merge                            合并分支
	git checkout -b 新分支名              从当前分支拉+复制内容 到新分支
	git push origin 新分支名              把新建的分支push到远端
	git branch --set-upstream-to=origin/新分支名        将本地分支与远程分支关联

  10.权限管理,基础设置:
    git config credential.helper store      开启凭证助手 - 会记住下次输入的账号密码
        -'cache --timeout 7200'             记住7200s
	git config --system --unset credential.helper       清理系统凭证助手
    git config --global credential.helper wincred       清理全局凭证助手
    git credential-manager uninstall                    清除掉缓存在git中的用户名和密码

  11.代理设置
    【需要挂了vpn！！！】
    -命令行设置：
        socket:
            git config --global http.proxy socks5://127.0.0.1:10808
                --local     本地
                --system    系统全局
            git config --global https.proxy socks5://127.0.0.1:10808
        http:
            git config --global http.proxy http://127.0.0.1:10809
            git config --global https.proxy https://127.0.0.1:10809
    -文件设置:
        [http]
        proxy = socks5://127.0.0.1:1080
        [https]
        proxy = socks5://127.0.0.1:1080
    -配置文件地址:
        -全局:
            windows: C:\Users\Administrator\.gitconfig
            Linux: ~/.gitconfig
        -当前项目:
            项目：项目文件夹/.git/config
    -取消代理
        git config --global --unset http.proxy
        git config --global --unset https.proxy
    -查看配置代理:
        git config -l --global

  12.cherry-pick
    将某分支的一个提交记录插入到另外一个分支
    git cherry-pick [commit-id]
    解决冲突后
    git cherry-pick --continue
    跳过冲突
    git cherry-pick --skip
    退出合并
    git cherry-pick --abort

  13.gitlab ci
    教程地址：https://docs.gitlab.com/ee/ci/examples/
    gitlab-ci文件实例：
        stages:
            - build
            - test
            - deploy

        build-job:
            stage:build

        test-job:
            stage:test

        deploy-job:
            stage:deploy
